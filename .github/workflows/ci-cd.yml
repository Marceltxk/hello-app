name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: marcelchiarelo/hello-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Generate image tag
      id: tag
      run: echo "IMAGE_TAG=v$(date +%Y%m%d-%H%M%S)-${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:${{ steps.tag.outputs.IMAGE_TAG }}
          ${{ env.DOCKER_IMAGE }}:latest
          
    - name: Update manifest repository
  if: github.ref == 'refs/heads/main'
  run: |
    # Configurar SSH com debug
    mkdir -p ~/.ssh
    echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
    chmod 600 ~/.ssh/id_rsa
    
    # Debug da chave
    echo "SSH key fingerprint:"
    ssh-keygen -lf ~/.ssh/id_rsa
    
    # Configurar known_hosts
    ssh-keyscan -H github.com >> ~/.ssh/known_hosts
    
    # Testar conexão SSH
    echo "Testing SSH connection:"
    ssh -T git@github.com || true
    
    # Configurar Git
    git config --global user.name "GitHub Actions"
    git config --global user.email "actions@github.com"
    
    # Clonar repositório
    git clone git@github.com:Marceltxk/hello-manifests.git temp-manifests
    cd temp-manifests
    
    # Verificar branch
    git branch -a
    
    # Atualizar imagem no deployment
    sed -i "s|image: ${{ env.DOCKER_IMAGE }}:.*|image: ${{ env.DOCKER_IMAGE }}:${{ steps.tag.outputs.IMAGE_TAG }}|g" deployment.yaml
    
    # Mostrar diferenças
    git diff
    
    # Commit e push
    git add deployment.yaml
    git commit -m "Update image tag to ${{ steps.tag.outputs.IMAGE_TAG }}"
    git push origin master
